Question 1:

Problem 1:

SELECT 
    player_id, 
    MIN(event_date) AS first_login
FROM 
    Activity
GROUP BY 
    player_id;

Problem 2:

WITH max_salary AS(
    SELECT MAX(salary) AS highest_salary, departmentId
    FROM Employee
    GROUP BY departmentId
)
SELECT d.name AS Department, e.name AS Employee, e.salary AS Salary
FROM Employee e 
JOIN
    Department d ON e.departmentId = d.id
JOIN 
    max_salary ms ON e.departmentId = ms.departmentId AND e.salary = ms.highest_salary;

Problem 3:

SELECT c.name AS Customers
FROM Customers c
LEFT JOIN Orders o ON c.id = o.customerId
WHERE o.customerId IS NULL;

Problem 4:

SELECT id AS Id
FROM (
    SELECT 
        id,
        recordDate,
        temperature,
        LAG(temperature) OVER (ORDER BY recordDate) AS prev_temperature
    FROM Weather
) AS temp
WHERE temperature > prev_temperature;

Problem 5:

SELECT 
    s.user_id,
    ROUND(
        IFNULL(
            SUM(c.action = 'confirmed') / COUNT(c.user_id), 
            0
        ), 
        2
    ) AS confirmation_rate
FROM 
    Signups s
LEFT JOIN 
    Confirmations c ON s.user_id = c.user_id
GROUP BY 
    s.user_id;

Problem 6:

SELECT
    CASE
        WHEN g.Grade >= 8 THEN s.Name
        ELSE 'NULL'
    END AS Name,
    g.Grade,
    s.Marks
FROM
    Students s
JOIN
    Grades g
ON
    s.Marks BETWEEN g.Min_Mark AND g.Max_Mark
ORDER BY
    g.Grade DESC,
    CASE
        WHEN g.Grade >= 8 THEN s.Name
    END ASC,
    CASE
        WHEN g.Grade < 8 THEN s.Marks
    END ASC;